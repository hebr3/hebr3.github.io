#hash((doc . (body (h2 "Problem 5") (p "I have solved similar questions during math test so I went with a purely brute force solution to this problem as I wanted to test how long it would take to complete.") (div ((class "filebox")) (div ((class "filename") (decode "exclude")) "ProjectEuler5.hs") (div ((class "highlight")) (table ((class "sourcetable")) (tbody (tr (td ((class "linenos")) (div ((class "linenodiv")) (pre "1\n2\n3\n4\n5\n6\n7\n8\n9"))) (td ((class "code")) (div ((class "source")) (pre (span) (span ((class "nf")) "main") " " (span ((class "ow")) "::") " " (span ((class "kt")) "IO") " " (span ((class "nb")) "()") "\n" (span ((class "nf")) "main") " " (span ((class "ow")) "=") " " (span ((class "kr")) "do") "\n    " (span ((class "n")) "putStrLn") " " (span ((class "s")) "\"" "ProjectEuler.net" "\"") "\n\n    " (span ((class "n")) "putStrLn") " " (span ((class "s")) "\"") (span ((class "se")) "\\n") (span ((class "s")) "Problem5 - Smallest multiple of the numbers 1-20" "\"") "\n    " (span ((class "n")) "print") " " (span ((class "n")) "problem5") "\n\n" (span ((class "c1")) "--Smallest multiple of the numbers 1-20") "\n" (span ((class "nf")) "problem5") " " (span ((class "ow")) "=") " " (span ((class "n")) "head") " " (span ((class "p")) "[") (span ((class "n")) "x") " " (span ((class "o")) "|") " " (span ((class "n")) "x") " " (span ((class "ow")) "<" "-") " " (span ((class "p")) "[") (span ((class "mi")) "1") (span ((class "o")) "..") (span ((class "p")) "],") " " (span ((class "n")) "mod") " " (span ((class "n")) "x") " " (span ((class "mi")) "5") " " (span ((class "o")) "==") " " (span ((class "mi")) "0") (span ((class "p")) ",") " " (span ((class "n")) "mod") " " (span ((class "n")) "x") " " (span ((class "mi")) "7") " " (span ((class "o")) "==") " " (span ((class "mi")) "0") (span ((class "p")) ",") " " (span ((class "n")) "mod") " " (span ((class "n")) "x") " " (span ((class "mi")) "9") " " (span ((class "o")) "==") " " (span ((class "mi")) "0") (span ((class "p")) ",") " " (span ((class "n")) "mod") " " (span ((class "n")) "x") " " (span ((class "mi")) "11") " " (span ((class "o")) "==") " " (span ((class "mi")) "0") (span ((class "p")) ",") " " (span ((class "n")) "mod") " " (span ((class "n")) "x") " " (span ((class "mi")) "13") " " (span ((class "o")) "==") " " (span ((class "mi")) "0") (span ((class "p")) ",") " " (span ((class "n")) "mod") " " (span ((class "n")) "x") " " (span ((class "mi")) "16") " " (span ((class "o")) "==") " " (span ((class "mi")) "0") (span ((class "p")) ",") " " (span ((class "n")) "mod") " " (span ((class "n")) "x") " " (span ((class "mi")) "17") " " (span ((class "o")) "==") " " (span ((class "mi")) "0") (span ((class "p")) ",") (span ((class "n")) "mod") " " (span ((class "n")) "x") " " (span ((class "mi")) "19") " " (span ((class "o")) "==") " " (span ((class "mi")) "0") (span ((class "p")) "]") "\n")) "\n")))))) (p "I was a little suprised that the program didn’t crash considering how large a number it had to count up to. I’m not sure if this says more about the Haskell langauge or modern computers. I do know that Haskell supports Integers that can be as large as the memory space of the computer allows, so I feel like this might be a win for Haskell.") (p "Solving this without programming is mostly an exercise in taking the prime factorization of the numbers from 1 to 20 and " (a ((href "http://www.wolframalpha.com/input/?i=232792560")) "combining them") ".") (h2 "Problem 6") (p "Rather straight foward solution to this problem. I am still suprised by how clean the code looks in haskell compared to " (code "c++") ". There is much less " (a ((href "https://en.wikipedia.org/wiki/Boilerplate_code")) "boilerplate") " code required to get a solution printed on screen.") (div ((class "filebox")) (div ((class "filename") (decode "exclude")) "ProjectEuler6.hs") (div ((class "highlight")) (table ((class "sourcetable")) (tbody (tr (td ((class "linenos")) (div ((class "linenodiv")) (pre " 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13"))) (td ((class "code")) (div ((class "source")) (pre (span) (span ((class "nf")) "main") " " (span ((class "ow")) "::") " " (span ((class "kt")) "IO") " " (span ((class "nb")) "()") "\n" (span ((class "nf")) "main") " " (span ((class "ow")) "=") " " (span ((class "kr")) "do") "\n    " (span ((class "n")) "putStrLn") " " (span ((class "s")) "\"" "ProjectEuler.net" "\"") "\n    " (span ((class "n")) "putStrLn") " " (span ((class "s")) "\"") (span ((class "se")) "\\n") (span ((class "s")) "Problem6 - Sum sqaure difference for the first 100 natural numbers" "\"") "\n    " (span ((class "n")) "print") " " (span ((class "n")) "problem6") "\n\n" (span ((class "c1")) "--Sum square difference") "\n" (span ((class "nf")) "problem6") " " (span ((class "ow")) "=") " " (span ((class "n")) "sqSum") " " (span ((class "o")) "-") " " (span ((class "n")) "sumSq") "\n\n" (span ((class "nf")) "sq") " " (span ((class "n")) "x") " " (span ((class "ow")) "=") " " (span ((class "n")) "x") " " (span ((class "o")) "*") " " (span ((class "n")) "x") "\n\n" (span ((class "nf")) "sqSum") " " (span ((class "ow")) "=") " " (span ((class "n")) "sq") " " (span ((class "p")) "(") (span ((class "n")) "sum") " " (span ((class "p")) "[") (span ((class "mi")) "1") (span ((class "o")) "..") (span ((class "mi")) "100") (span ((class "p")) "])") "\n" (span ((class "nf")) "sumSq") " " (span ((class "ow")) "=") " " (span ((class "n")) "sum") " " (span ((class "p")) "(") (span ((class "n")) "map") " " (span ((class "n")) "sq") " " (span ((class "p")) "[") (span ((class "mi")) "1") (span ((class "o")) "..") (span ((class "mi")) "100") (span ((class "p")) "])") "\n")) "\n")))))) (h2 "Problem 7") (p "Another really clean solution using infinite lists.") (div ((class "filebox")) (div ((class "filename") (decode "exclude")) "ProjectEuler7.hs") (div ((class "highlight")) (table ((class "sourcetable")) (tbody (tr (td ((class "linenos")) (div ((class "linenodiv")) (pre " 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12"))) (td ((class "code")) (div ((class "source")) (pre (span) (span ((class "nf")) "main") " " (span ((class "ow")) "::") " " (span ((class "kt")) "IO") " " (span ((class "nb")) "()") "\n" (span ((class "nf")) "main") " " (span ((class "ow")) "=") " " (span ((class "kr")) "do") "\n    " (span ((class "n")) "putStrLn") " " (span ((class "s")) "\"" "ProjectEuler.net" "\"") "\n    " (span ((class "n")) "putStrLn") " " (span ((class "s")) "\"") (span ((class "se")) "\\n") (span ((class "s")) "Problem7 - 10,001th Prime" "\"") "\n    " (span ((class "n")) "print") " " (span ((class "n")) "problem7") "\n\n" (span ((class "c1")) "--10001th Prime") "\n" (span ((class "nf")) "problem7") " " (span ((class "ow")) "=") " " (span ((class "n")) "primes") (span ((class "o")) "!!") (span ((class "mi")) "10000") " " (span ((class "c1")) "-- index starts at 0") "\n\n" (span ((class "nf")) "primes") " " (span ((class "ow")) "=") " " (span ((class "mi")) "2") " " (span ((class "kt")) ":") " " (span ((class "n")) "primes" 39) "\n    " (span ((class "kr")) "where") " " (span ((class "n")) "isPrime") " " (span ((class "p")) "(") (span ((class "n")) "p") (span ((class "kt")) ":") (span ((class "n")) "ps") (span ((class "p")) ")") " " (span ((class "n")) "n") " " (span ((class "ow")) "=") " " (span ((class "n")) "p") (span ((class "o")) "*") (span ((class "n")) "p") " " (span ((class "o")) ">") " " (span ((class "n")) "n") " " (span ((class "o")) "||") " " (span ((class "n")) "n") " " (span ((class "p")) "`") (span ((class "n")) "rem") (span ((class "p")) "`") " " (span ((class "n")) "p") " " (span ((class "o")) "/=") " " (span ((class "mi")) "0") " " (span ((class "o")) "&" "&") " " (span ((class "n")) "isPrime") " " (span ((class "n")) "ps") " " (span ((class "n")) "n") "\n          " (span ((class "n")) "primes" 39) " " (span ((class "ow")) "=") " " (span ((class "mi")) "3") " " (span ((class "kt")) ":") " " (span ((class "n")) "filter") " " (span ((class "p")) "(") (span ((class "n")) "isPrime") " " (span ((class "n")) "primes" 39) (span ((class "p")) ")") " " (span ((class "p")) "[") (span ((class "mi")) "5") (span ((class "p")) ",") (span ((class "mi")) "7") (span ((class "o")) "..") (span ((class "p")) "]") "\n")) "\n")))))) (p (a ((href "https://projecteuler.net/problem=8")) "Problem 8") " from Project Euler is looking like a much more involved problem however, I’m hopeful that I will be able to get it finished this week."))) (metas . #hasheq((here-path . "/media/henry/Steam/Github/hebr3.github.io/posts/project-euler-with-haskell-5-6-7.poly.pm") (published . "2015-10-17") (title . "Project Euler problem 5, 6 and 7, with Haskell") (topics . "Project Euler,Haskell"))))