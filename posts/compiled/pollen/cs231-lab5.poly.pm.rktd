#hash((doc . (body (div ((class "filebox")) (div ((class "filename") (decode "exclude")) "Lab5.asm") (div ((class "highlight")) (table ((class "sourcetable")) (tbody (tr (td ((class "linenos")) (div ((class "linenodiv")) (pre "  1\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n 10\n 11\n 12\n 13\n 14\n 15\n 16\n 17\n 18\n 19\n 20\n 21\n 22\n 23\n 24\n 25\n 26\n 27\n 28\n 29\n 30\n 31\n 32\n 33\n 34\n 35\n 36\n 37\n 38\n 39\n 40\n 41\n 42\n 43\n 44\n 45\n 46\n 47\n 48\n 49\n 50\n 51\n 52\n 53\n 54\n 55\n 56\n 57\n 58\n 59\n 60\n 61\n 62\n 63\n 64\n 65\n 66\n 67\n 68\n 69\n 70\n 71\n 72\n 73\n 74\n 75\n 76\n 77\n 78\n 79\n 80\n 81\n 82\n 83\n 84\n 85\n 86\n 87\n 88\n 89\n 90\n 91\n 92\n 93\n 94\n 95\n 96\n 97\n 98\n 99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139"))) (td ((class "code")) (div ((class "source")) (pre (span) (span ((class "c")) "## Henry Brooks") "\n\n                " (span ((class "na")) ".data") "\n" (span ((class "nl")) "arry:") "\t\t" (span ((class "na")) ".word") "\t\t" (span ((class "mi")) "0") (span ((class "p")) ",") (span ((class "mi")) "0") (span ((class "p")) ",") (span ((class "mi")) "0") (span ((class "p")) ",") (span ((class "mi")) "0") (span ((class "p")) ",") (span ((class "mi")) "0") (span ((class "p")) ",") (span ((class "mi")) "0") (span ((class "p")) ",") (span ((class "mi")) "0") (span ((class "p")) ",") (span ((class "mi")) "0") (span ((class "p")) ",") (span ((class "mi")) "0") (span ((class "p")) ",") (span ((class "mi")) "0") "\n\n" (span ((class "nl")) "space:") "  \t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "\\n" "\"") "\n" (span ((class "nl")) "header1:") "\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "======================================================================\\n" "\"") "\n" (span ((class "nl")) "header2:") "\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "Program Description: \\tThis program asks a user how many numbers they\\n\\t\\t\\tadd to an array, then returns the array in reverse order\\n" "\"") "\n" (span ((class "nl")) "header3:") "\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "Author:              \\tHenry Brooks\\n" "\"") "\n" (span ((class "nl")) "header4:") "\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "Creation Date:       \\t02/06/2017\\n" "\"") "\n" (span ((class "nl")) "header5:") "\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "======================================================================\\n" "\"") "\n\n" (span ((class "nl")) "nl:") "\t\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "\\n" "\"") "\n\n" (span ((class "nl")) "query1:") "\t\t" (span ((class "na")) ".asciiz") "\t\t" (span ((class "s")) "\"" "Enter the number of elements:\\n" "\"") "\n" (span ((class "nl")) "query2:") "\t\t" (span ((class "na")) ".asciiz") "\t\t" (span ((class "s")) "\"" "Enter number " "\"") "\n" (span ((class "nl")) "query3:") "\t\t" (span ((class "na")) ".asciiz") "\t\t" (span ((class "s")) "\"" ":\\t" "\"") "\n" (span ((class "nl")) "badcount1:") "\t" (span ((class "na")) ".asciiz") "\t\t" (span ((class "s")) "\"" "Error array can" 39 "t have more than 10 elements, try again!!\\n" "\"") "\n" (span ((class "nl")) "badcount2:") "\t" (span ((class "na")) ".asciiz") "\t\t" (span ((class "s")) "\"" "Error array can" 39 "t have less than 1 element\\n" "\"") "\n" (span ((class "nl")) "return:") "\t\t" (span ((class "na")) ".asciiz") "\t\t" (span ((class "s")) "\"" "The content of array in reverse order is:\\n" "\"") "\n\n                " (span ((class "na")) ".text") "\n" (span ((class "nl")) "main:") "\n" (span ((class "c")) "################### Print header information") "\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "header1") "\n                " (span ((class "nf")) "syscall") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "header2") "\n                " (span ((class "nf")) "syscall") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "header3") "\n                " (span ((class "nf")) "syscall") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "header4") "\n                " (span ((class "nf")) "syscall") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "header5") "\n                " (span ((class "nf")) "syscall") "\n\n" (span ((class "c")) "################### Print query") "\n                " (span ((class "nf")) "li") "\t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\n                " (span ((class "nf")) "la") "\t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "query1") "\n                " (span ((class "nf")) "syscall") "\n\n" (span ((class "nl")) "main2:") "\n" (span ((class "c")) "################### Take user input") "\n                " (span ((class "nf")) "li") "\t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "5") "\n                " (span ((class "nf")) "syscall") "\n\n" (span ((class "c")) "################### Check that input is valid") "\n                " (span ((class "nf")) "ble") "\t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "no")) "$0") (span ((class "p")) ",") " " (span ((class "no")) "badInputLo") "\n                " (span ((class "nf")) "addi") "\t\t\t" (span ((class "no")) "$t0") (span ((class "p")) ",") " " (span ((class "no")) "$0") (span ((class "p")) ",") " " (span ((class "mi")) "10") "\n                " (span ((class "nf")) "bgt") "\t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "no")) "$t0") (span ((class "p")) ",") " " (span ((class "no")) "badInputHi") "\n\n" (span ((class "c")) "################## If input is good set $s0 to $v0") "\n                " (span ((class "nf")) "addi") "\t\t\t" (span ((class "no")) "$s0") (span ((class "p")) ",") " " (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "0") "\t\t" (span ((class "c")) "# lengthOfArray") "\n\n" (span ((class "c")) "################### Initialize $s1 to 0") "\n                " (span ((class "nf")) "addi") "\t\t\t" (span ((class "no")) "$s1") (span ((class "p")) ",") " " (span ((class "no")) "$0") (span ((class "p")) ",") " " (span ((class "mi")) "0") "\t\t" (span ((class "c")) "# counter") "\n                " (span ((class "nf")) "lw") "\t\t\t" (span ((class "no")) "$t1") (span ((class "p")) ",") " " (span ((class "no")) "arry") "\t\t" (span ((class "c")) "# pointer") "\n\n" (span ((class "c")) "################### Loop to collect inputs from user") "\n" (span ((class "c")) "################### if ( count == value) break") "\n" (span ((class "c")) "###################   else array[count] = input") "\n" (span ((class "c")) "###################        count++") "\n" (span ((class "c")) "###################        loop") "\n\n" (span ((class "nl")) "read_loop:") "\t" (span ((class "nf")) "beq") "\t\t\t" (span ((class "no")) "$s0") (span ((class "p")) ",") " " (span ((class "no")) "$s1") (span ((class "p")) ",") " " (span ((class "no")) "exit") "\t\t" (span ((class "c")) "# pointer is at end") "\n\n\n                " (span ((class "nf")) "li") "\t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\t\t\t" (span ((class "c")) "# load print string") "\n                " (span ((class "nf")) "la") "\t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "query2") "\t\t" (span ((class "c")) "# load " "\"" "enter number " "\"" " message") "\n                " (span ((class "nf")) "syscall") "\t\t\t\t\t\t" (span ((class "c")) "# print message") "\n\n                " (span ((class "nf")) "li") "\t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "1") "\t\t\t" (span ((class "c")) "# load print intger") "\n                " (span ((class "nf")) "add") "\t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "$s1") (span ((class "p")) ",") " " (span ((class "no")) "$0") "\t\t" (span ((class "c")) "# load count") "\n                " (span ((class "nf")) "addi") "\t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "mi")) "1") "\t\t" (span ((class "c")) "# increment for printing") "\n                " (span ((class "nf")) "syscall") "\n\n                " (span ((class "nf")) "li") "\t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\t\t\t" (span ((class "c")) "# load print string") "\n                " (span ((class "nf")) "la") "\t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "query3") "\t\t" (span ((class "c")) "# load " "\"" ":\\t" "\"") "\n                " (span ((class "nf")) "syscall") "\n\n                " (span ((class "nf")) "li") "\t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "5") "\t\t\t" (span ((class "c")) "# load user input program") "\n                " (span ((class "nf")) "syscall") "\t\t\t\t\t\t" (span ((class "c")) "# get user input, (cin)") "\n\n                " (span ((class "nf")) "addi") "\t\t\t" (span ((class "no")) "$t7") (span ((class "p")) ",") " " (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "0") "\n\n                " (span ((class "nf")) "sw") "\t\t\t" (span ((class "no")) "$t7") (span ((class "p")) ",") " " (span ((class "mi")) "0") (span ((class "p")) "(") (span ((class "no")) "$t1") (span ((class "p")) ")") "\n\n                " (span ((class "nf")) "li") "\t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "1") "\n                " (span ((class "nf")) "la") "\t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "mi")) "0") (span ((class "p")) "(") (span ((class "no")) "$t1") (span ((class "p")) ")") "\n                " (span ((class "nf")) "syscall") "\n\n                " (span ((class "nf")) "addi") "\t\t\t" (span ((class "no")) "$s1") (span ((class "p")) ",") " " (span ((class "no")) "$s1") (span ((class "p")) ",") " " (span ((class "mi")) "1") "\n                " (span ((class "nf")) "j") " \t\t\t" (span ((class "no")) "read_loop") "\n\n\n" (span ((class "c")) "#################### Loop to read off the elements of the array") "\n" (span ((class "c")) "#print_loop:") "\n" (span ((class "c")) "#\t\tbeq\t\t\t$t2, $0, end\t# check array end") "\n" (span ((class "c")) "#") "\n" (span ((class "c")) "#\t\tlw\t\t\t$a0, ($t1)") "\n" (span ((class "c")) "#\t\tli\t\t\t$v0, 1") "\n" (span ((class "c")) "#\t\tsyscall") "\n" (span ((class "c")) "#") "\n" (span ((class "c")) "#\t\tli\t\t\t$v0, 4") "\n" (span ((class "c")) "#\t\tsyscall") "\n" (span ((class "c")) "#") "\n" (span ((class "c")) "#\t\taddi\t\t\t$t2, $t2, -1") "\n" (span ((class "c")) "#\t\taddi\t\t\t$t1, $t1, -4") "\n" (span ((class "c")) "#\t\tj\tprint_loop\t# ret") "\n\n\n" (span ((class "c")) "#################### User input for count is less than or equal to 0") "\n" (span ((class "nl")) "badInputLo:") "\t" (span ((class "nf")) "li") "\t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\n                " (span ((class "nf")) "la") "\t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "badcount2") "\n                " (span ((class "nf")) "syscall") "\n\n                " (span ((class "nf")) "j") "\t\t\t" (span ((class "no")) "main2") "\n\n" (span ((class "c")) "#################### User input for count is less than or equal to 0") "\n" (span ((class "nl")) "badInputHi:") "\t" (span ((class "nf")) "li") "\t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\n                " (span ((class "nf")) "la") "\t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "badcount1") "\n                " (span ((class "nf")) "syscall") "\n\n                " (span ((class "nf")) "j") "\t\t\t" (span ((class "no")) "main2") "\n\n" (span ((class "c")) "#################### exit from program") "\n" (span ((class "nl")) "exit:") "\t\t" (span ((class "nf")) "li") "\t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\t\t\t" (span ((class "c")) "# load print string") "\n                " (span ((class "nf")) "la") "\t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "header1") "\n                " (span ((class "nf")) "syscall") "\n\n                " (span ((class "nf")) "la") "\t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "return") "\t\t" (span ((class "c")) "# load answer message") "\n                " (span ((class "nf")) "syscall") "\t\t\t\t\t\t" (span ((class "c")) "# print answer message") "\n\n                " (span ((class "nf")) "la") "\t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "header1") "\n                " (span ((class "nf")) "syscall") "\n\n                " (span ((class "nf")) "li") "\t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "1") "\t\t\t" (span ((class "c")) "# load print int") "\n                " (span ((class "nf")) "add") "\t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "$s2") (span ((class "p")) ",") " " (span ((class "no")) "$0") "\t\t" (span ((class "c")) "# load sum") "\n                " (span ((class "nf")) "syscall") "\t\t\t\t\t\t" (span ((class "c")) "# print sum") "\n")) "\n")))))))) (metas . #hasheq((here-path . "C:\\GitHub\\hebr3.github.io\\posts\\cs231-lab5.poly.pm") (published . "2017-02-06") (title . "CS231-Lab4") (topics . "CS231,Assembly"))))