#hash((doc . (body (h2 "Problem 9") (p "I went through a number of different versions of this program before I was happy with the answer.") (div ((class "filebox")) (div ((class "filename") (decode "exclude")) "ProjectEuler9.hs") (div ((class "highlight")) (table ((class "sourcetable")) (tbody (tr (td ((class "linenos")) (div ((class "linenodiv")) (pre "1\n2\n3\n4\n5\n6\n7\n8\n9"))) (td ((class "code")) (div ((class "source")) (pre (span) (span ((class "nf")) "main") " " (span ((class "ow")) "::") " " (span ((class "kt")) "IO") " " (span ((class "nb")) "()") "\n" (span ((class "nf")) "main") " " (span ((class "ow")) "=") " " (span ((class "kr")) "do") "\n    " (span ((class "n")) "putStrLn") " " (span ((class "s")) "\"" "ProjectEuler.net" "\"") "\n    " (span ((class "n")) "putStrLn") " " (span ((class "s")) "\"" "Problem9 - Special Pythogorean triplet" "\"") "\n    " (span ((class "n")) "print") " " (span ((class "n")) "problem9") "\n\n" (span ((class "nf")) "problem9") " " (span ((class "ow")) "=") " " (span ((class "n")) "head") " " (span ((class "n")) "triplet") "\n\n" (span ((class "nf")) "triplet") " " (span ((class "ow")) "=") " " (span ((class "p")) "[") (span ((class "n")) "a") (span ((class "o")) "*") (span ((class "n")) "b") (span ((class "o")) "*") (span ((class "p")) "(") (span ((class "mi")) "1000") (span ((class "o")) "-") (span ((class "n")) "a") (span ((class "o")) "-") (span ((class "n")) "b") (span ((class "p")) ")") " " (span ((class "o")) "|") " " (span ((class "n")) "a") " " (span ((class "ow")) "<" "-") " " (span ((class "p")) "[") (span ((class "mi")) "1") (span ((class "o")) "..") (span ((class "mi")) "1000") (span ((class "p")) "],") " " (span ((class "n")) "b") " " (span ((class "ow")) "<" "-") " " (span ((class "p")) "[") (span ((class "n")) "a") (span ((class "o")) "..") (span ((class "p")) "(") (span ((class "mi")) "1000") (span ((class "o")) "-") (span ((class "n")) "a") (span ((class "p")) ")],") " " (span ((class "n")) "a") (span ((class "o")) "^") (span ((class "mi")) "2") " " (span ((class "o")) "+") " " (span ((class "n")) "b") (span ((class "o")) "^") (span ((class "mi")) "2") " " (span ((class "o")) "==") " " (span ((class "p")) "(") (span ((class "mi")) "1000") (span ((class "o")) "-") (span ((class "n")) "a") (span ((class "o")) "-") (span ((class "n")) "b") (span ((class "p")) ")") (span ((class "o")) "^") (span ((class "mi")) "2") (span ((class "p")) "]") "\n")) "\n")))))) (h2 "Problem 10") (p "Another really straight forward problem using infinite lists.") (div ((class "filebox")) (div ((class "filename") (decode "exclude")) "ProjectEuler10.hs") (div ((class "highlight")) (table ((class "sourcetable")) (tbody (tr (td ((class "linenos")) (div ((class "linenodiv")) (pre " 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11"))) (td ((class "code")) (div ((class "source")) (pre (span) (span ((class "nf")) "main") " " (span ((class "ow")) "::") " " (span ((class "kt")) "IO") " " (span ((class "nb")) "()") "\n" (span ((class "nf")) "main") " " (span ((class "ow")) "=") " " (span ((class "kr")) "do") "\n    " (span ((class "n")) "putStrLn") " " (span ((class "s")) "\"" "ProjectEuler.net" "\"") "\n    " (span ((class "n")) "putStrLn") " " (span ((class "s")) "\"" "Problem9 - Summation of primes" "\"") "\n    " (span ((class "n")) "print") " " (span ((class "n")) "problem10") "\n\n" (span ((class "nf")) "problem10") " " (span ((class "ow")) "=") " " (span ((class "n")) "sum") " " (span ((class "p")) "(") (span ((class "n")) "takeWhile") " " (span ((class "p")) "(") (span ((class "o")) "<") (span ((class "mi")) "2000000") (span ((class "p")) ")") " " (span ((class "n")) "primes") (span ((class "p")) ")") "\n\n" (span ((class "nf")) "primes") " " (span ((class "ow")) "=") " " (span ((class "mi")) "2") " " (span ((class "kt")) ":") " " (span ((class "n")) "primes" 39) "\n    " (span ((class "kr")) "where") " " (span ((class "n")) "isPrime") " " (span ((class "p")) "(") (span ((class "n")) "p") (span ((class "kt")) ":") (span ((class "n")) "ps") (span ((class "p")) ")") " " (span ((class "n")) "n") " " (span ((class "ow")) "=") " " (span ((class "n")) "p") (span ((class "o")) "*") (span ((class "n")) "p") " " (span ((class "o")) ">") " " (span ((class "n")) "n") " " (span ((class "o")) "||") " " (span ((class "n")) "n") " " (span ((class "p")) "`") (span ((class "n")) "rem") (span ((class "p")) "`") " " (span ((class "n")) "p") " " (span ((class "o")) "/=") " " (span ((class "mi")) "0") " " (span ((class "o")) "&" "&") " " (span ((class "n")) "isPrime") " " (span ((class "n")) "ps") " " (span ((class "n")) "n") "\n          " (span ((class "n")) "primes" 39) " " (span ((class "ow")) "=") " " (span ((class "mi")) "3") " " (span ((class "kt")) ":") " " (span ((class "n")) "filter") " " (span ((class "p")) "(") (span ((class "n")) "isPrime") " " (span ((class "n")) "primes" 39) (span ((class "p")) ")") " " (span ((class "p")) "[") (span ((class "mi")) "5") (span ((class "p")) ",") (span ((class "mi")) "7") (span ((class "o")) "..") (span ((class "p")) "]") "\n")) "\n")))))))) (metas . #hasheq((here-path . "/media/henry/Steam/Github/hebr3.github.io/posts/project-euler-with-haskell-9-10.poly.pm") (published . "2015-10-31") (title . "Project Euler problem 9 and 10, with Haskell") (topics . "Project Euler,Haskell"))))