#hash((doc . (body (p "I am currently taking " (a ((href "https://www.csusm.edu/assessment/portfolios/cs/bs/2012_14/cs_course_info.pdf")) "CS231") " at " (a ((href "https://www.csusm.edu/")) "CSUSM") " which covers assembly programming for the " (a ((href "https://en.wikipedia.org/wiki/MIPS_instruction_set")) "MIPS") " architecture.") (p "We have been using " (a ((href "http://courses.missouristate.edu/KenVollmar/mars/")) "MARS") " as the IDE for the class and it has been working out well so far.") (p "My second assignment for the class was to write a simple calculator that would calculate the sum, difference, product, quotient, and remainder of two numbers.") (p "One issue that I have been having with the language is that it seems to have a lot of boilerplate that needs to be repeated. Iâ€™m thinking that I will write a helper function or macro to help with some of the repeated code.") (div ((class "filebox")) (div ((class "filename") (decode "exclude")) "Lab2-Calculator.asm") (div ((class "highlight")) (table ((class "sourcetable")) (tbody (tr (td ((class "linenos")) (div ((class "linenodiv")) (pre "  1\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n 10\n 11\n 12\n 13\n 14\n 15\n 16\n 17\n 18\n 19\n 20\n 21\n 22\n 23\n 24\n 25\n 26\n 27\n 28\n 29\n 30\n 31\n 32\n 33\n 34\n 35\n 36\n 37\n 38\n 39\n 40\n 41\n 42\n 43\n 44\n 45\n 46\n 47\n 48\n 49\n 50\n 51\n 52\n 53\n 54\n 55\n 56\n 57\n 58\n 59\n 60\n 61\n 62\n 63\n 64\n 65\n 66\n 67\n 68\n 69\n 70\n 71\n 72\n 73\n 74\n 75\n 76\n 77\n 78\n 79\n 80\n 81\n 82\n 83\n 84\n 85\n 86\n 87\n 88\n 89\n 90\n 91\n 92\n 93\n 94\n 95\n 96\n 97\n 98\n 99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127"))) (td ((class "code")) (div ((class "source")) (pre (span) (span ((class "c")) "## Henry Brooks") "\n" (span ((class "c")) "## CS231 Lab2 basic calculator") "\n\n                " (span ((class "na")) ".data") "\n" (span ((class "nl")) "space:") "  \t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "\\n" "\"") "\n" (span ((class "nl")) "header1:") "\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "=============================================================================\\n" "\"") "\n" (span ((class "nl")) "header2:") "\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "Program Description: This program is written to mimic a very basic calculator\\n" "\"") "\n" (span ((class "nl")) "header3:") "\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "Author:              Henry Brooks\\n" "\"") "\n" (span ((class "nl")) "header4:") "\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "Creation Date:       02/01/2017\\n" "\"") "\n" (span ((class "nl")) "header5:") "\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "=============================================================================\\n" "\"") "\n\n" (span ((class "nl")) "nl:") "\t\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "\\n" "\"") "\n\n" (span ((class "nl")) "query:") "\t\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "Please input two numbers?\\n" "\"") "\n" (span ((class "nl")) "sum:") "\t\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "Sum is: " "\"") "\n" (span ((class "nl")) "dif:") "\t\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "Difference is: " "\"") "\n" (span ((class "nl")) "prod:") "\t\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "Product is: " "\"") "\n" (span ((class "nl")) "quot:") "\t\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "Quotient is: " "\"") "\n" (span ((class "nl")) "remain:") "\t\t" (span ((class "na")) ".asciiz") " \t" (span ((class "s")) "\"" "Remainder is: " "\"") "\n\n                " (span ((class "na")) ".text") "\n" (span ((class "nl")) "main:") "\n" (span ((class "c")) "################### Print header information") "\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "header1") "\n                " (span ((class "nf")) "syscall") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "header2") "\n                " (span ((class "nf")) "syscall") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "header3") "\n                " (span ((class "nf")) "syscall") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "header4") "\n                " (span ((class "nf")) "syscall") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "header5") "\n                " (span ((class "nf")) "syscall") "\n\n" (span ((class "c")) "################### Print question") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "query") "\n                " (span ((class "nf")) "syscall") "\n\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\t\t" (span ((class "c")) "#print newline") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "nl") "\n                " (span ((class "nf")) "syscall") "\n\n" (span ((class "c")) "################### Take two inputs from the user") "\n" (span ((class "c")) "################### and assign to $s0 and $s1") "\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "5") "\t\t" (span ((class "c")) "#load take input program") "\n                " (span ((class "nf")) "syscall") "\t\t\t\t\t" (span ((class "c")) "#take first input") "\n                " (span ((class "nf")) "add") " \t\t\t" (span ((class "no")) "$s0") (span ((class "p")) ",") " " (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "no")) "$0") "\t" (span ((class "c")) "#store first input in $s0") "\n\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "5") "\t\t" (span ((class "c")) "#load take input program again") "\n                " (span ((class "nf")) "syscall") "\t\t\t\t\t" (span ((class "c")) "#take second input") "\n                " (span ((class "nf")) "add") " \t\t\t" (span ((class "no")) "$s1") (span ((class "p")) ",") " " (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "no")) "$0") "\t" (span ((class "c")) "#store second input in $s1") "\n\n" (span ((class "c")) "################## Print newline") "\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "nl") "\n                " (span ((class "nf")) "syscall") "\n\n" (span ((class "c")) "################### Print sum") "\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "sum") "\n                " (span ((class "nf")) "syscall") "\n\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "1") "\t\t" (span ((class "c")) "#load print integer") "\n                " (span ((class "nf")) "add") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "$s0") (span ((class "p")) ",") " " (span ((class "no")) "$s1") "\t" (span ((class "c")) "#add first and second input") "\n                " (span ((class "nf")) "syscall") "\t\t\t\t\t" (span ((class "c")) "#print integer") "\n\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\t\t" (span ((class "c")) "#print newline") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "nl") "\n                " (span ((class "nf")) "syscall") "\n\n" (span ((class "c")) "################### Print difference") "\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "dif") "\n                " (span ((class "nf")) "syscall") "\n\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "1") "\t\t" (span ((class "c")) "#load print integer") "\n                " (span ((class "nf")) "sub") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "$s0") (span ((class "p")) ",") " " (span ((class "no")) "$s1") "\t" (span ((class "c")) "#subtract second input from first") "\n                " (span ((class "nf")) "syscall") "\t\t\t\t\t" (span ((class "c")) "#print integer") "\n\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\t\t" (span ((class "c")) "#print newline") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "nl") "\n                " (span ((class "nf")) "syscall") "\n\n" (span ((class "c")) "################### Print product") "\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "prod") "\n                " (span ((class "nf")) "syscall") "\n\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "1") "\t\t" (span ((class "c")) "#load print integer") "\n                " (span ((class "nf")) "mult") " \t\t\t" (span ((class "no")) "$s0") (span ((class "p")) ",") " " (span ((class "no")) "$s1") "\t" (span ((class "c")) "#multiple first and second") "\n                " (span ((class "nf")) "mflo") " \t\t\t" (span ((class "no")) "$a0") "\t\t" (span ((class "c")) "#assign the product to the argument") "\n                " (span ((class "nf")) "syscall") "\t\t\t\t\t" (span ((class "c")) "#print integer") "\n\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\t\t" (span ((class "c")) "#print newline") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "nl") "\n                " (span ((class "nf")) "syscall") "\n\n" (span ((class "c")) "################### Print quotient") "\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "quot") "\n                " (span ((class "nf")) "syscall") "\n\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "1") "\t\t" (span ((class "c")) "#load print integer") "\n                " (span ((class "nf")) "div") " \t\t\t" (span ((class "no")) "$s0") (span ((class "p")) ",") " " (span ((class "no")) "$s1") "\t" (span ((class "c")) "#divide the first by the second") "\n                " (span ((class "nf")) "mflo") " \t\t\t" (span ((class "no")) "$a0") "\t\t" (span ((class "c")) "#assign the quotient to the argument") "\n                " (span ((class "nf")) "syscall") "\t\t\t\t\t" (span ((class "c")) "#print integer") "\n\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\t\t" (span ((class "c")) "#print newline") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "nl") "\n                " (span ((class "nf")) "syscall") "\n\n" (span ((class "c")) "################### Print remainder") "\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "remain") "\n                " (span ((class "nf")) "syscall") "\n\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "1") "\t\t" (span ((class "c")) "#load print integer") "\n                " (span ((class "nf")) "div") " \t\t\t" (span ((class "no")) "$s0") (span ((class "p")) ",") " " (span ((class "no")) "$s1") "\t" (span ((class "c")) "#divide first and second") "\n                " (span ((class "nf")) "mfhi") " \t\t\t" (span ((class "no")) "$a0") "\t\t" (span ((class "c")) "#assign the remainder to the argument") "\n                " (span ((class "nf")) "syscall") "\t\t\t\t\t" (span ((class "c")) "#print integer") "\n\n                " (span ((class "nf")) "li") " \t\t\t" (span ((class "no")) "$v0") (span ((class "p")) ",") " " (span ((class "mi")) "4") "\t\t" (span ((class "c")) "#print newline") "\n                " (span ((class "nf")) "la") " \t\t\t" (span ((class "no")) "$a0") (span ((class "p")) ",") " " (span ((class "no")) "nl") "\n                " (span ((class "nf")) "syscall") "\n\n" (span ((class "c")) "################### EOF") "\n")) "\n")))))))) (metas . #hasheq((here-path . "C:\\GitHub\\hebr3.github.io\\posts\\cs231-lab2.poly.pm") (published . "2017-02-03") (title . "CS231-Labs") (topics . "CS231,Assembly"))))