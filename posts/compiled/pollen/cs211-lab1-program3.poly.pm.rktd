#hash((doc . (body (h2 "Program 3") (p "Write a program with several functions that perform the following tasks:") (p "a. Read the following 10 integer numbers from the file data.txt into array A." (br) "     " "10 15 27 89 90 95 27 13 99 33" (br) " " "Call function ReadArray that reads numbers from the file data.txt into an array.") (p "b. Copy array A into array B in reverse order." (br) "Call function ReverseArray that copies an array into another array in reverse order") (p "c. Print the elements of Array A and B." (br) "Call function PrintArray that prints the elements of an array of any size") (p "d. Find the number of elements in array A that are >= 80 and <=100." (br) "Call function FindRange that finds and returns the number of elements in an array of any size that are within a certain range (min, max)") (p "e. Find the index of the elements in array A that are divisible by 5." (br) "Call function FindDiv that finds and returns the number of the elements in array that are divisible by 5") (p "f. Find average in array A." (br) "Call function ArrayAvg that finds and returns the average of elements in an array of any size") (p "g. Find the minimum number in array A." (br) "Call function ArrayMin that finds and returns the minimum number in an array of any size") (p "h. Ask the user to input a key. Then search for the key in array A and inform the user about the existence (true / false) of the key in array." (br) "Call function KeySearch that searches for a key in an array of any size and returns true/false as result") (p "NOTES:" (br) "- If a function is supposed to return a value, print that value in main not inside the function." (br) "- Any parameter that is not supposed to be changed inside a function must be declared as a constant parameter.") (div ((class "listing-filename")) 128196 " " "data.txt") (pre ((class "code")) "10 15 27 89 90 95 27 13 99 33") (div ((class "listing-filename")) 128196 " " "./a.out > output.txt") (pre ((class "code")) "10 15 27 89 90 95 27 13 99 33" "\n\n" "33 99 13 27 95 90 89 27 15 10" "\n\n" "There are 4 values in arrayA between 80 and 100." "\n\n" "There are elements divisible by 5 at positions 1, 2, 5, 6, 4" "\n\n" "The average of the array is 49.8" "\n\n" "The minimum element of the array is 10" "\n\n" "Enter an integer value to search for: True") (div ((class "filebox")) (div ((class "filename") (decode "exclude")) "Lab1_Program3.cpp") (div ((class "highlight")) (table ((class "sourcetable")) (tbody (tr (td ((class "linenos")) (div ((class "linenodiv")) (pre "  1\n  2\n  3\n  4\n  5\n  6\n  7\n  8\n  9\n 10\n 11\n 12\n 13\n 14\n 15\n 16\n 17\n 18\n 19\n 20\n 21\n 22\n 23\n 24\n 25\n 26\n 27\n 28\n 29\n 30\n 31\n 32\n 33\n 34\n 35\n 36\n 37\n 38\n 39\n 40\n 41\n 42\n 43\n 44\n 45\n 46\n 47\n 48\n 49\n 50\n 51\n 52\n 53\n 54\n 55\n 56\n 57\n 58\n 59\n 60\n 61\n 62\n 63\n 64\n 65\n 66\n 67\n 68\n 69\n 70\n 71\n 72\n 73\n 74\n 75\n 76\n 77\n 78\n 79\n 80\n 81\n 82\n 83\n 84\n 85\n 86\n 87\n 88\n 89\n 90\n 91\n 92\n 93\n 94\n 95\n 96\n 97\n 98\n 99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159"))) (td ((class "code")) (div ((class "source")) (pre (span) (span ((class "cp")) "#include") " " (span ((class "cpf")) "<" "iostream" ">") (span ((class "cp"))) "\n" (span ((class "cp")) "#include") " " (span ((class "cpf")) "<" "fstream" ">") (span ((class "cp"))) "\n" (span ((class "cp")) "#include") " " (span ((class "cpf")) "<" "string" ">") (span ((class "cp"))) "\n" (span ((class "k")) "using") " " (span ((class "k")) "namespace") " " (span ((class "n")) "std") (span ((class "p")) ";") "\n\n" (span ((class "c1")) "// Function prototypes *************************************************") "\n" (span ((class "kt")) "int") " " (span ((class "nf")) "fileSize") (span ((class "p")) "();") "                        " (span ((class "c1")) "// aux") "\n" (span ((class "kt")) "void") " " (span ((class "nf")) "ReadArray") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "p")) "[],") " " (span ((class "kt")) "int") (span ((class "p")) ");") "            " (span ((class "c1")) "// a") "\n" (span ((class "kt")) "void") " " (span ((class "nf")) "ReverseArray") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "p")) "[],") " " (span ((class "kt")) "int") " " (span ((class "p")) "[],") " " (span ((class "kt")) "int") (span ((class "p")) ");") " " (span ((class "c1")) "// b") "\n" (span ((class "kt")) "void") " " (span ((class "nf")) "PrintArray") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "p")) "[],") " " (span ((class "kt")) "int") (span ((class "p")) ");") "           " (span ((class "c1")) "// c") "\n" (span ((class "kt")) "int") " " (span ((class "nf")) "FindRange") (span ((class "p")) "(") (span ((class "kt")) "int") (span ((class "p")) ",") " " (span ((class "kt")) "int") (span ((class "p")) ",") " " (span ((class "kt")) "int") " " (span ((class "p")) "[]);") "        " (span ((class "c1")) "// d") "\n" (span ((class "kt")) "int") " " (span ((class "nf")) "FindDiv") (span ((class "p")) "(") (span ((class "kt")) "int") (span ((class "p")) ",") " " (span ((class "kt")) "int") " " (span ((class "p")) "[]);") "               " (span ((class "c1")) "// e") "\n" (span ((class "kt")) "double") " " (span ((class "nf")) "ArrayAvg") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "p")) "[]);") "                " (span ((class "c1")) "// f") "\n" (span ((class "kt")) "int") " " (span ((class "nf")) "ArrayMin") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "p")) "[]);") "                   " (span ((class "c1")) "// g") "\n" (span ((class "kt")) "bool") " " (span ((class "nf")) "KeySearch") (span ((class "p")) "(") (span ((class "kt")) "int") (span ((class "p")) ",") " " (span ((class "kt")) "int") " " (span ((class "p")) "[]);") "            " (span ((class "c1")) "// h") "\n\n" (span ((class "kt")) "int") " " (span ((class "nf")) "main") " " (span ((class "p")) "()") " " (span ((class "p")) "{") "\n  " (span ((class "c1")) "// find length of the input") "\n  " (span ((class "kt")) "int") " " (span ((class "n")) "SIZE") " " (span ((class "o")) "=") " " (span ((class "n")) "fileSize") (span ((class "p")) "();") "\n\n  " (span ((class "c1")) "// initialize array A and B") "\n  " (span ((class "kt")) "int") " " (span ((class "n")) "arrayA") (span ((class "p")) "[") (span ((class "n")) "SIZE") (span ((class "p")) "];") "\n  " (span ((class "kt")) "int") " " (span ((class "n")) "arrayB") (span ((class "p")) "[") (span ((class "n")) "SIZE") (span ((class "p")) "];") "\n\n  " (span ((class "c1")) "// a. Read data from data2.txt to arrayA") "\n  " (span ((class "n")) "ReadArray") (span ((class "p")) "(") (span ((class "n")) "arrayA") (span ((class "p")) ",") " " (span ((class "n")) "SIZE") (span ((class "p")) ");") "\n\n  " (span ((class "c1")) "// b. Copy arrayA into arrayB in reverse order") "\n  " (span ((class "n")) "ReverseArray") (span ((class "p")) "(") (span ((class "n")) "arrayA") (span ((class "p")) ",") " " (span ((class "n")) "arrayB") (span ((class "p")) ",") " " (span ((class "n")) "SIZE") (span ((class "p")) ");") "\n\n  " (span ((class "c1")) "// c. Print arrayA and arrayB") "\n  " (span ((class "n")) "PrintArray") (span ((class "p")) "(") (span ((class "n")) "arrayA") (span ((class "p")) ",") " " (span ((class "n")) "SIZE") (span ((class "p")) ");") "\n  " (span ((class "n")) "PrintArray") (span ((class "p")) "(") (span ((class "n")) "arrayB") (span ((class "p")) ",") " " (span ((class "n")) "SIZE") (span ((class "p")) ");") "\n\n  " (span ((class "c1")) "// d. Find the number of elements in array between 80 and 100") "\n  " (span ((class "n")) "cout") " " (span ((class "o")) "<" "<") " " (span ((class "s")) "\"" "There are " "\"") "\n       " (span ((class "o")) "<" "<") " " (span ((class "n")) "FindRange") (span ((class "p")) "(") (span ((class "mi")) "80") (span ((class "p")) ",") " " (span ((class "mi")) "100") (span ((class "p")) ",") " " (span ((class "n")) "arrayA") (span ((class "p")) ")") "\n       " (span ((class "o")) "<" "<") " " (span ((class "s")) "\"" " values in arrayA between " "\"") "\n       " (span ((class "o")) "<" "<") " " (span ((class "mi")) "80") "\n       " (span ((class "o")) "<" "<") " " (span ((class "s")) "\"" " and " "\"") "\n       " (span ((class "o")) "<" "<") " " (span ((class "mi")) "100") " " (span ((class "o")) "<" "<") " " (span ((class "s")) "\"" "." "\"") "\n       " (span ((class "o")) "<" "<") " " (span ((class "n")) "endl") " " (span ((class "o")) "<" "<") (span ((class "n")) "endl") (span ((class "p")) ";") "\n\n  " (span ((class "c1")) "// e. Find the number of elements divisible by 5") "\n  " (span ((class "n")) "cout") " " (span ((class "o")) "<" "<") " " (span ((class "s")) "\"" "There are elements divisible by 5 at positions " "\"") (span ((class "p")) ";") "\n  " (span ((class "n")) "cout") " " (span ((class "o")) "<" "<") " " (span ((class "n")) "FindDiv") (span ((class "p")) "(") (span ((class "mi")) "5") (span ((class "p")) ",") " " (span ((class "n")) "arrayA") (span ((class "p")) ")") "\n       " (span ((class "o")) "<" "<") " " (span ((class "n")) "endl") " " (span ((class "o")) "<" "<") " " (span ((class "n")) "endl") (span ((class "p")) ";") "\n\n  " (span ((class "c1")) "// f. Find the average of the array") "\n  " (span ((class "n")) "cout") " " (span ((class "o")) "<" "<") " " (span ((class "s")) "\"" "The average of the array is " "\"") "\n       " (span ((class "o")) "<" "<") " " (span ((class "n")) "ArrayAvg") (span ((class "p")) "(") (span ((class "n")) "arrayA") (span ((class "p")) ")") "\n       " (span ((class "o")) "<" "<") " " (span ((class "n")) "endl") " " (span ((class "o")) "<" "<") " " (span ((class "n")) "endl") (span ((class "p")) ";") "\n\n  " (span ((class "c1")) "// g. Find the minimum element of the array") "\n  " (span ((class "n")) "cout") " " (span ((class "o")) "<" "<") " " (span ((class "s")) "\"" "The minimum element of the array is " "\"") "\n       " (span ((class "o")) "<" "<") " " (span ((class "n")) "ArrayMin") (span ((class "p")) "(") (span ((class "n")) "arrayA") (span ((class "p")) ")") "\n       " (span ((class "o")) "<" "<") " " (span ((class "n")) "endl") " " (span ((class "o")) "<" "<") " " (span ((class "n")) "endl") (span ((class "p")) ";") "\n\n  " (span ((class "c1")) "// h. Search for an element in an array") "\n  " (span ((class "kt")) "int") " " (span ((class "n")) "num") (span ((class "p")) ";") "\n  " (span ((class "n")) "cout") " " (span ((class "o")) "<" "<") " " (span ((class "s")) "\"" "Enter an integer value to search for: " "\"") (span ((class "p")) ";") "\n  " (span ((class "n")) "cin") " " (span ((class "o")) ">" ">") " " (span ((class "n")) "num") (span ((class "p")) ";") "\n  " (span ((class "n")) "cout") " " (span ((class "o")) "<" "<") " " (span ((class "p")) "(") (span ((class "n")) "KeySearch") (span ((class "p")) "(") (span ((class "n")) "num") (span ((class "p")) ",") " " (span ((class "n")) "arrayA") (span ((class "p")) ")") " " (span ((class "o")) "?") " " (span ((class "s")) "\"" "True" "\"") " " (span ((class "o")) ":") " " (span ((class "s")) "\"" "False" "\"") (span ((class "p")) ")") "\n       " (span ((class "o")) "<" "<") " " (span ((class "n")) "endl") " " (span ((class "o")) "<" "<") " " (span ((class "n")) "endl") (span ((class "p")) ";") "\n\n  " (span ((class "k")) "return") " " (span ((class "mi")) "0") (span ((class "p")) ";") "\n" (span ((class "p")) "}") "\n\n" (span ((class "c1")) "//Function definitions *************************************************") "\n\n" (span ((class "kt")) "int") " " (span ((class "nf")) "fileSize") (span ((class "p")) "()") " " (span ((class "p")) "{") "\n  " (span ((class "kt")) "int") " " (span ((class "n")) "count") " " (span ((class "o")) "=") " " (span ((class "mi")) "0") (span ((class "p")) ";") "\n  " (span ((class "kt")) "int") " " (span ((class "n")) "temp") " " (span ((class "o")) "=") " " (span ((class "mi")) "0") (span ((class "p")) ";") "\n  " (span ((class "n")) "ifstream") " " (span ((class "n")) "inputFile") (span ((class "p")) ";") "\n  " (span ((class "n")) "inputFile") (span ((class "p")) ".") (span ((class "n")) "open") (span ((class "p")) "(") (span ((class "s")) "\"" "data2.txt" "\"") (span ((class "p")) ");") "\n  " (span ((class "k")) "while") " " (span ((class "p")) "(") (span ((class "n")) "inputFile") " " (span ((class "o")) ">" ">") " " (span ((class "n")) "temp") (span ((class "p")) ")") "\n    " (span ((class "n")) "count") (span ((class "o")) "++") (span ((class "p")) ";") "\n  " (span ((class "n")) "inputFile") (span ((class "p")) ".") (span ((class "n")) "close") (span ((class "p")) "();") "\n  " (span ((class "k")) "return") " " (span ((class "n")) "count") (span ((class "p")) ";") "\n" (span ((class "p")) "}") "\n\n" (span ((class "kt")) "void") " " (span ((class "nf")) "ReadArray") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "arr") (span ((class "p")) "[],") " " (span ((class "kt")) "int") " " (span ((class "n")) "size") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n  " (span ((class "c1")) "// initialize ifstream to read file") "\n  " (span ((class "n")) "ifstream") " " (span ((class "n")) "inputFile") (span ((class "p")) ";") "\n  " (span ((class "n")) "inputFile") (span ((class "p")) ".") (span ((class "n")) "open") (span ((class "p")) "(") (span ((class "s")) "\"" "data2.txt" "\"") (span ((class "p")) ");") "\n\n  " (span ((class "k")) "if") " " (span ((class "p")) "(") (span ((class "n")) "inputFile") (span ((class "p")) ".") (span ((class "n")) "is_open") (span ((class "p")) "())") " " (span ((class "p")) "{") " " (span ((class "c1")) "// Only do these if file is open") "\n    " (span ((class "c1")) "// Pull data off data2.txt and place in arr") "\n    " (span ((class "k")) "for") " " (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "i") " " (span ((class "o")) "=") " " (span ((class "mi")) "0") (span ((class "p")) ";") " " (span ((class "n")) "i") " " (span ((class "o")) "<") " " (span ((class "n")) "size") (span ((class "p")) ";") " " (span ((class "n")) "i") (span ((class "o")) "++") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n      " (span ((class "n")) "inputFile") " " (span ((class "o")) ">" ">") " " (span ((class "n")) "arr") (span ((class "p")) "[") (span ((class "n")) "i") (span ((class "p")) "];") "\n    " (span ((class "p")) "}") "\n  " (span ((class "p")) "}") "\n\n  " (span ((class "c1")) "// Close the file") "\n  " (span ((class "n")) "inputFile") (span ((class "p")) ".") (span ((class "n")) "close") (span ((class "p")) "();") "\n" (span ((class "p")) "}") "\n\n" (span ((class "kt")) "void") " " (span ((class "nf")) "ReverseArray") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "arrayA") (span ((class "p")) "[],") " " (span ((class "kt")) "int") " " (span ((class "n")) "arrayB") (span ((class "p")) "[],") " " (span ((class "kt")) "int") " " (span ((class "n")) "size") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n  " (span ((class "k")) "for") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "i") " " (span ((class "o")) "=") " " (span ((class "mi")) "0") (span ((class "p")) ";") " " (span ((class "n")) "i") " " (span ((class "o")) "<") " " (span ((class "n")) "size") (span ((class "p")) ";") " " (span ((class "n")) "i") (span ((class "o")) "++") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n    " (span ((class "n")) "arrayB") (span ((class "p")) "[") (span ((class "n")) "i") (span ((class "p")) "]") " " (span ((class "o")) "=") " " (span ((class "n")) "arrayA") (span ((class "p")) "[") (span ((class "mi")) "9") " " (span ((class "o")) "-") " " (span ((class "n")) "i") (span ((class "p")) "];") "\n  " (span ((class "p")) "}") "\n" (span ((class "p")) "}") "\n\n" (span ((class "kt")) "void") " " (span ((class "nf")) "PrintArray") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "arr") (span ((class "p")) "[],") " " (span ((class "kt")) "int") " " (span ((class "n")) "size") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n  " (span ((class "k")) "for") " " (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "i") " " (span ((class "o")) "=") " " (span ((class "mi")) "0") (span ((class "p")) ";") " " (span ((class "n")) "i") " " (span ((class "o")) "<") " " (span ((class "n")) "size") (span ((class "p")) ";") " " (span ((class "n")) "i") (span ((class "o")) "++") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n    " (span ((class "n")) "cout") " " (span ((class "o")) "<" "<") " " (span ((class "n")) "arr") (span ((class "p")) "[") (span ((class "n")) "i") (span ((class "p")) "]") " " (span ((class "o")) "<" "<") " " (span ((class "s")) "\"" " " "\"") (span ((class "p")) ";") "\n  " (span ((class "p")) "}") "\n  " (span ((class "n")) "cout") " " (span ((class "o")) "<" "<") " " (span ((class "n")) "endl") " " (span ((class "o")) "<" "<") " " (span ((class "n")) "endl") (span ((class "p")) ";") "\n" (span ((class "p")) "}") "\n\n" (span ((class "kt")) "int") " " (span ((class "nf")) "FindRange") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "first") (span ((class "p")) ",") " " (span ((class "kt")) "int") " " (span ((class "n")) "second") (span ((class "p")) ",") " " (span ((class "kt")) "int") " " (span ((class "n")) "arr") (span ((class "p")) "[") (span ((class "mi")) "10") (span ((class "p")) "])") " " (span ((class "p")) "{") "\n  " (span ((class "kt")) "int") " " (span ((class "n")) "count") " " (span ((class "o")) "=") " " (span ((class "mi")) "0") (span ((class "p")) ";") "\n  " (span ((class "k")) "for") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "i") " " (span ((class "o")) "=") " " (span ((class "mi")) "0") (span ((class "p")) ";") " " (span ((class "n")) "i") " " (span ((class "o")) "<") " " (span ((class "mi")) "10") (span ((class "p")) ";") " " (span ((class "n")) "i") (span ((class "o")) "++") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n    " (span ((class "k")) "if") (span ((class "p")) "(") (span ((class "n")) "arr") (span ((class "p")) "[") (span ((class "n")) "i") (span ((class "p")) "]") " " (span ((class "o")) ">") " " (span ((class "n")) "first") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n      " (span ((class "k")) "if") (span ((class "p")) "(") (span ((class "n")) "arr") (span ((class "p")) "[") (span ((class "n")) "i") (span ((class "p")) "]") " " (span ((class "o")) "<") " " (span ((class "n")) "second") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n        " (span ((class "n")) "count") " " (span ((class "o")) "+=") " " (span ((class "mi")) "1") (span ((class "p")) ";") "\n      " (span ((class "p")) "}") "\n    " (span ((class "p")) "}") "\n  " (span ((class "p")) "}") "\n  " (span ((class "k")) "return") " " (span ((class "n")) "count") (span ((class "p")) ";") "\n" (span ((class "p")) "}") "\n\n" (span ((class "kt")) "int") " " (span ((class "nf")) "FindDiv") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "num") (span ((class "p")) ",") " " (span ((class "kt")) "int") " " (span ((class "n")) "arr") (span ((class "p")) "[") (span ((class "mi")) "10") (span ((class "p")) "])") " " (span ((class "p")) "{") "\n  " (span ((class "kt")) "int") " " (span ((class "n")) "count") " " (span ((class "o")) "=") " " (span ((class "mi")) "0") (span ((class "p")) ";") "\n  " (span ((class "k")) "for") " " (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "i") " " (span ((class "o")) "=") " " (span ((class "mi")) "0") (span ((class "p")) ";") " " (span ((class "n")) "i") " " (span ((class "o")) "<") " " (span ((class "mi")) "10") (span ((class "p")) ";") " " (span ((class "n")) "i") (span ((class "o")) "++") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n    " (span ((class "k")) "if") " " (span ((class "p")) "(") (span ((class "n")) "arr") (span ((class "p")) "[") (span ((class "n")) "i") (span ((class "p")) "]") " " (span ((class "o")) "%") " " (span ((class "n")) "num") " " (span ((class "o")) "==") " " (span ((class "mi")) "0") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n      " (span ((class "n")) "cout") " " (span ((class "o")) "<" "<") " " (span ((class "n")) "i") (span ((class "o")) "+") (span ((class "mi")) "1") " " (span ((class "o")) "<" "<") " " (span ((class "s")) "\"" ", " "\"") (span ((class "p")) ";") "\n      " (span ((class "n")) "count") " " (span ((class "o")) "+=") " " (span ((class "mi")) "1") (span ((class "p")) ";") "\n    " (span ((class "p")) "}") "\n  " (span ((class "p")) "}") "\n  " (span ((class "k")) "return") " " (span ((class "n")) "count") (span ((class "p")) ";") "\n" (span ((class "p")) "}") "\n\n" (span ((class "kt")) "double") " " (span ((class "nf")) "ArrayAvg") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "arr") (span ((class "p")) "[") (span ((class "mi")) "10") (span ((class "p")) "])") " " (span ((class "p")) "{") "\n  " (span ((class "kt")) "int") " " (span ((class "n")) "sum") " " (span ((class "o")) "=") " " (span ((class "mi")) "0") (span ((class "p")) ";") "\n  " (span ((class "k")) "for") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "i") " " (span ((class "o")) "=") " " (span ((class "mi")) "0") (span ((class "p")) ";") " " (span ((class "n")) "i") " " (span ((class "o")) "<") " " (span ((class "mi")) "10") (span ((class "p")) ";") " " (span ((class "n")) "i") (span ((class "o")) "++") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n    " (span ((class "n")) "sum") " " (span ((class "o")) "+=") " " (span ((class "n")) "arr") (span ((class "p")) "[") (span ((class "n")) "i") (span ((class "p")) "];") "\n  " (span ((class "p")) "}") "\n  " (span ((class "k")) "return") " " (span ((class "n")) "sum") " " (span ((class "o")) "/") " " (span ((class "mf")) "10.0") (span ((class "p")) ";") "\n" (span ((class "p")) "}") "\n\n" (span ((class "kt")) "int") " " (span ((class "nf")) "ArrayMin") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "arr") (span ((class "p")) "[") (span ((class "mi")) "10") (span ((class "p")) "])") " " (span ((class "p")) "{") "\n  " (span ((class "kt")) "int") " " (span ((class "n")) "min") " " (span ((class "o")) "=") " " (span ((class "n")) "arr") (span ((class "p")) "[") (span ((class "mi")) "0") (span ((class "p")) "];") "\n  " (span ((class "k")) "for") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "i") " " (span ((class "o")) "=") " " (span ((class "mi")) "1") (span ((class "p")) ";") " " (span ((class "n")) "i") " " (span ((class "o")) "<") " " (span ((class "mi")) "10") (span ((class "p")) ";") " " (span ((class "n")) "i") (span ((class "o")) "++") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n    " (span ((class "k")) "if") (span ((class "p")) "(") (span ((class "n")) "arr") (span ((class "p")) "[") (span ((class "n")) "i") (span ((class "p")) "]") " " (span ((class "o")) "<") " " (span ((class "n")) "min") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n      " (span ((class "n")) "min") " " (span ((class "o")) "=") " " (span ((class "n")) "arr") (span ((class "p")) "[") (span ((class "n")) "i") (span ((class "p")) "];") "\n    " (span ((class "p")) "}") "\n  " (span ((class "p")) "}") "\n  " (span ((class "k")) "return") " " (span ((class "n")) "min") (span ((class "p")) ";") "\n" (span ((class "p")) "}") "\n\n" (span ((class "kt")) "bool") " " (span ((class "nf")) "KeySearch") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "num") (span ((class "p")) ",") " " (span ((class "kt")) "int") " " (span ((class "n")) "arr") (span ((class "p")) "[") (span ((class "mi")) "10") (span ((class "p")) "])") " " (span ((class "p")) "{") "\n  " (span ((class "k")) "for") (span ((class "p")) "(") (span ((class "kt")) "int") " " (span ((class "n")) "i") " " (span ((class "o")) "=") " " (span ((class "mi")) "0") (span ((class "p")) ";") " " (span ((class "n")) "i") " " (span ((class "o")) "<") " " (span ((class "mi")) "10") (span ((class "p")) ";") " " (span ((class "n")) "i") (span ((class "o")) "++") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n    " (span ((class "k")) "if") (span ((class "p")) "(") (span ((class "n")) "arr") (span ((class "p")) "[") (span ((class "n")) "i") (span ((class "p")) "]") " " (span ((class "o")) "==") " " (span ((class "n")) "num") (span ((class "p")) ")") " " (span ((class "p")) "{") "\n      " (span ((class "k")) "return") " " (span ((class "nb")) "true") (span ((class "p")) ";") "\n    " (span ((class "p")) "}") "\n  " (span ((class "p")) "}") "\n  " (span ((class "k")) "return") " " (span ((class "nb")) "false") (span ((class "p")) ";") "\n" (span ((class "p")) "}") "\n")) "\n")))))) (div ((class "filebox")) (div ((class "filename") (decode "exclude")) "Lab1_Program2.cpp") (div ((class "highlight")) (table ((class "sourcetable")) (tbody (tr (td ((class "linenos")) (div ((class "linenodiv")) (pre "1"))) (td ((class "code")) (div ((class "source")) (pre (span) (span ((class "kn")) "#lang ") (span ((class "nn")) "racket") "\n")) "\n")))))))) (metas . #hasheq((here-path . "/media/henry/Steam/Github/hebr3.github.io/posts/cs211-lab1-program3.poly.pm") (published . "2017-01-30") (title . "CS211-Lab1-Program3 in Racket") (topics . "CS211,Racket,C++"))))